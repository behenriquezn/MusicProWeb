// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicProWeb.Models;
using Oracle.EntityFrameworkCore.Metadata;

namespace MusicProWeb.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MUSICPRODB")
                .HasAnnotation("Relational:Collation", "USING_NLS_COMP")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("SEQ_ERROR");

            modelBuilder.HasSequence("SUCURSAL_SUCURSAL_ID_SEQ");

            modelBuilder.Entity("MusicProWeb.Models.CarritoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CarritoId")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("ProductoIdProd")
                        .HasColumnType("NUMBER(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoIdProd");

                    b.ToTable("CarritoProductos");
                });

            modelBuilder.Entity("MusicProWeb.Models.Categoria", b =>
                {
                    b.Property<decimal>("IdCategoria")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<string>("Categorias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CATEGORIAS");

                    b.HasKey("IdCategoria")
                        .HasName("CATEGORIA_PROD_PK");

                    b.ToTable("CATEGORIA");
                });

            modelBuilder.Entity("MusicProWeb.Models.Marca", b =>
                {
                    b.Property<decimal>("IdMarca")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("ID_MARCA");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PROVEEDOR");

                    b.HasKey("IdMarca")
                        .HasName("MARCA_PK");

                    b.ToTable("MARCA");
                });

            modelBuilder.Entity("MusicProWeb.Models.Producto", b =>
                {
                    b.Property<decimal>("IdProd")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("ID_PROD");

                    b.Property<decimal>("CantidadStock")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("CANTIDAD_STOCK");

                    b.Property<decimal>("CategoriaId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("CATEGORIA_ID");

                    b.Property<string>("Imagen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IMAGEN");

                    b.Property<decimal>("MarcaId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("MARCA_ID");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("NOMBRE");

                    b.Property<decimal>("Precio")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("PRECIO");

                    b.Property<decimal>("SubCatId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("SUB_CAT_ID");

                    b.HasKey("IdProd")
                        .HasName("PRODUCTO_PK");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("SubCatId");

                    b.ToTable("PRODUCTO");
                });

            modelBuilder.Entity("MusicProWeb.Models.SubCat", b =>
                {
                    b.Property<decimal>("IdSub")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("ID_SUB");

                    b.Property<decimal>("CategoriaId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("CATEGORIA_ID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("IdSub")
                        .HasName("SUB_CAT_PK");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SUB_CAT");
                });

            modelBuilder.Entity("MusicProWeb.Models.CarritoProducto", b =>
                {
                    b.HasOne("MusicProWeb.Models.Producto", "Producto")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("ProductoIdProd");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("MusicProWeb.Models.Producto", b =>
                {
                    b.HasOne("MusicProWeb.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicProWeb.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .HasConstraintName("PRODUCTO_MARCA_FK")
                        .IsRequired();

                    b.HasOne("MusicProWeb.Models.SubCat", "SubCat")
                        .WithMany()
                        .HasForeignKey("SubCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("SubCat");
                });

            modelBuilder.Entity("MusicProWeb.Models.SubCat", b =>
                {
                    b.HasOne("MusicProWeb.Models.Categoria", "Categoria")
                        .WithMany("SubCats")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("SUB_CAT_CATEGORIA_FK")
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MusicProWeb.Models.Categoria", b =>
                {
                    b.Navigation("SubCats");
                });

            modelBuilder.Entity("MusicProWeb.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("MusicProWeb.Models.Producto", b =>
                {
                    b.Navigation("CarritoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
